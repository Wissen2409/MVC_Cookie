@model LoginViewModel



@*Oluşturduğunuz, inputlara, model mapping olması için, name isimli attribute'yi veriyor olmanız lazım
Eğer vermezseniz post ettikten sonra inpıtların modele maplenmediğini görürsünüz

Name mapping de bir kaç farklı  yöntem var : 

1 : Eğer dinamik olarak @Model.Email demek istemiyorsanız, inputun name attributesine name = "Email" yazabilirsiniz
2 : String olarak name alanına değer vermek istemiyorsanız, değeri modelin içerisinde prop'un adından almasını istiyorsanız

asp-for=@Model.Email diyebilirsiniz, asp-for sizin yerinize, modelin içerisindeki prop'un prop adını alıp input'a name olarak ekleyecektir!!*@
<form method="post" action="/Home/Login">
    <div class="mb-3">
        <label for="exampleInputEmail1" class="form-label">Email address</label>
        <input asp-for="@Model.Email" type="email" class="form-control" id="exampleInputEmail1"
            aria-describedby="emailHelp">
        <div id="emailHelp" class="form-text">We'll never share your email with anyone else.</div>
    </div>
    <div class="mb-3">
        <label for="exampleInputPassword1" class="form-label">Password</label>
        <input asp-for="@Model.Password" type="password" class="form-control" id="exampleInputPassword1">
    </div>
    <div class="mb-3 form-check">
        <input asp-for="@Model.RememberMe" type="checkbox" class="form-check-input" id="exampleCheck1">
        <label class="form-check-label" for="exampleCheck1">Check me out</label>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>


<script>


    window.onload = function () {

        var model = @Html.Raw(Json.Serialize(Model));
        debugger;
        if (model != null) {

            model.email
        }

    }


</script>